local function doe()
	print('Searching...')

	local function display(skid)

		local BillboardGui = Instance.new("BillboardGui")
		local TextLabel = Instance.new("TextLabel")

		BillboardGui.Parent = skid
		BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		BillboardGui.Active = true
		BillboardGui.LightInfluence = 1.000
		BillboardGui.Size = UDim2.new(0, 200, 0, 50)
		BillboardGui.StudsOffset = Vector3.new(0, 2, 0)

		TextLabel.Parent = BillboardGui
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Size = UDim2.new(1, 0, 1, 0)
		TextLabel.Font = Enum.Font.SourceSans
		TextLabel.Text = skid.Parent.Name
		TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
		TextLabel.TextScaled = true
		TextLabel.TextSize = 14.000
		TextLabel.TextWrapped = true
		
		skid.Shape = Enum.PartType.Ball
		skid.Transparency = 0
		skid.Size = Vector3.new(2,2,2)
		skid.BrickColor = BrickColor.Red()
		skid.TopSurface = Enum.SurfaceType.Smooth
		skid.BottomSurface = Enum.SurfaceType.Smooth
		skid.Material = Enum.Material.SmoothPlastic
	end

	local function anti(skid)
		skid.CanCollide = false
	end

	local function search()
		wait(0.5)
		local plrs = {}
		for i, v in pairs(workspace:GetDescendants()) do
			if i%100 == 0 then wait() end
			if v.Name == 'HumanoidRootPart' and not v.Parent:FindFirstChild'Head' then
				if _G.DisplaySkids then
					display(v)
				end
				if _G.AntiFling then
					anti(v)
				end
				table.insert(plrs,v.Parent)
			end
		end
		return plrs
	end

	local plrs = search()
	if #plrs>0 then
		print('Invis-Fling skids found!')
		for i, p in pairs(plrs) do 
			local plr = game:GetService'Players':GetPlayerFromCharacter(p)
			local hrp = p:WaitForChild'HumanoidRootPart'
			print(string.format(
				'\n---Player %s found:\nDisplayName: %s\nUsername: %s\nUserId: %s\nPosition: %s\nCFrame: %s\n',
				i,
				plr.DisplayName,
				plr.Name,
				plr.UserId,
				tostring(hrp.Position),
				tostring(hrp.CFrame)
				))
			wait()
		end
	else
		print('No Invis-Fling skids found.')
	end

end

if _G.LoopSearch then
	while _G.LoopSearch do
		doe()
		wait(_G.LoopSeconds)
	end
else
	doe()
end
